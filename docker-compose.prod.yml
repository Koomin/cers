version: '3.8'

services:
  cers-rabbit:
    restart: always
    image: rabbitmq:latest
  cers-web:
    restart: always
    container_name: cers-web
    build:
      context: ./app
      dockerfile: Dockerfile.prod
    ports:
      - 8081:8081
    volumes:
      - /home/cers/staticfiles:/home/app/web/cers/static
      - /home/cers/media:/home/app/web/cers/media
    env_file:
      - ./.env.prod
    depends_on:
      - cers-db
    networks:
      - npm-nw
      - cers-network
    command: gunicorn cers.config.wsgi:application --bind 0.0.0.0:8081
  cers-db:
      restart: always
      container_name: cers-db
      image: postgres:13.0-alpine
      volumes:
        - postgres_data:/var/lib/postgresql/data
      env_file:
        - ./.env.prod.db
      networks:
        - cers-network
  cers-celery:
    build:
      context: ./app
      dockerfile: Dockerfile.prod
    command: celery -A config worker -l info
    env_file:
      - ./.env.prod
    depends_on:
      - cers-db
      - cers-rabbit
      - cers-web
  cers-beat:
    build:
      context: ./app
      dockerfile: Dockerfile.prod
    command: celery -A config beat -l INFO --scheduler django_celery_beat.schedulers:DatabaseScheduler
    env_file:
      - ./.env.prod
    depends_on:
      - cers-celery
      - cers-rabbit
      - cers-web
volumes:
  postgres_data:
  static_volume:
networks:
  cers-network:
  npm-nw:
    external: true
